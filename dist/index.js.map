{"version":3,"sources":["../src/index.ts"],"names":["pluginName","DownloadWebpackPlugin","constructor","options","userOption","downloads","apply","compiler","hooks","initialize","tap","filePath","autoInject","template","assets","undefined","length","defaultOption","map","it","index","status","url","fileName","getRandomFileName","forEach","option","hookDownloadInCompiler","hookDownloadInject","changeDownloadStatus","i","getDownloadSource","webpack","response","axios","get","data","sources","RawSource","download","thisCompilation","compilation","processAssets","tapAsync","name","stage","Compilation","PROCESS_ASSETS_STAGE_ADDITIONAL","_assets","cb","source","emitAsset","path","join","error","getTargetAsset","targetTemplate","templateIndex","getInjectedTemplateSourceData","originSource","toLocaleString","scriptLink","headerSplit","split","prevHeader","afterHeader","rest","newSource","PROCESS_ASSETS_STAGE_SUMMARIZE","templateSource","newTemplateSourceData","newTemplateSource","updateAsset","DEFAULT_FILE_TYPE"],"mappings":"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","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { assert } from \"console\";\nimport { findIndex, uniqBy } from \"lodash\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { sources, Compilation, Compiler, Asset } from \"webpack\";\nimport { IDownload, IDownloadWebpackPlugin, IOption } from \"./types\";\nimport path from \"path\";\n\nconst pluginName = \"DownloadWebpackPlugin\";\n\nexport class DownloadWebpackPlugin implements IDownloadWebpackPlugin {\n  userOption: IOption;\n  downloads: IDownload[];\n\n  constructor(options: IOption) {\n    this.userOption = options || {};\n    this.downloads = [];\n  }\n\n  apply(compiler: Compiler): void {\n    compiler.hooks.initialize.tap(pluginName, async () => {\n      const { filePath, autoInject, template, assets } = this.userOption;\n\n      /* check option */\n      assert(\n        filePath === undefined || typeof filePath === \"string\",\n        'filePath need to be set to \"string\" or \"null\",default is \"webpack.output.path\"'\n      );\n      assert(\n        autoInject === undefined || typeof autoInject === \"boolean\",\n        'autoInject need to be set to \"boolean\" or \"null\",default is \"true\"'\n      );\n      assert(\n        template === undefined || typeof template === \"string\",\n        'template need to be set to \"string\" or \"null\",default is \"index.html\"'\n      );\n      assert(assets && assets.length > 0, \"assets need to be set\");\n\n      /* default option */\n      const defaultOption: Omit<IOption, \"assets\"> = {\n        filePath: filePath || \"\",\n        autoInject: autoInject || true,\n        template: template || \"index.html\",\n      };\n\n      const downloads: IDownload[] = uniqBy(assets, \"url\").map((it, index) => ({\n        index,\n        status: \"PENDING\",\n        url: it.url,\n        filePath: it.filePath || defaultOption.filePath,\n        autoInject: it.autoInject || defaultOption.autoInject,\n        template: it.template || defaultOption.template,\n        fileName: it.fileName || getRandomFileName(),\n      }));\n\n      this.downloads = downloads;\n      downloads.forEach((option) => {\n        this.hookDownloadInCompiler(compiler, option);\n        this.hookDownloadInject(compiler, option);\n      });\n    });\n  }\n\n  changeDownloadStatus(i: number, status: IDownload[\"status\"]) {\n    this.downloads[i].status = status;\n  }\n\n  async getDownloadSource(\n    url: string,\n    webpack: Compiler[\"webpack\"],\n    options?: AxiosRequestConfig\n  ): Promise<any> {\n    const response = await axios.get(url, options);\n    const { data } = response;\n    return new webpack.sources.RawSource(data);\n  }\n\n  hookDownloadInCompiler(compiler: Compiler, download: IDownload) {\n    /* tapHook processAssets*/\n    compiler.hooks.thisCompilation.tap(\n      pluginName,\n      (compilation: Compilation) => {\n        compilation.hooks.processAssets.tapAsync(\n          {\n            name: pluginName,\n            stage: Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL,\n          },\n          async (_assets, cb) => {\n            const { fileName = \"\", filePath = \"\", url, index } = download;\n            try {\n              const source = await this.getDownloadSource(\n                url,\n                compiler.webpack\n              );\n              compilation.emitAsset(path.join(filePath, fileName), source);\n              this.changeDownloadStatus(index, \"SUCCESS\");\n              cb();\n            } catch (error) {\n              this.changeDownloadStatus(index, \"FAIL\");\n              throw error;\n            }\n          }\n        );\n      }\n    );\n  }\n\n  getTargetAsset(assets: Asset[], targetTemplate?: string): Asset | undefined {\n    if (!assets || !assets.length || !targetTemplate) return;\n    const templateIndex = findIndex(assets, { name: targetTemplate });\n    return assets[templateIndex];\n  }\n\n  getInjectedTemplateSourceData(source: sources.Source, download: IDownload) {\n    const { filePath = \"\", fileName = \"\" } = download;\n    const originSource = source.source().toLocaleString();\n    const scriptLink = `<script src='${path.join(\n      filePath,\n      fileName\n    )}'></script>`;\n    const headerSplit = originSource.split(\"</head>\");\n    const [prevHeader, afterHeader, ...rest] = headerSplit;\n    const newSource = `${prevHeader}${scriptLink}</head>${afterHeader}${\n      rest && rest.join(\"\")\n    }`;\n    return newSource;\n  }\n\n  hookDownloadInject(compiler: Compiler, download: IDownload) {\n    if (!download.autoInject) return;\n    compiler.hooks.thisCompilation.tap(\n      pluginName,\n      (compilation: Compilation) => {\n        compilation.hooks.processAssets.tapAsync(\n          {\n            name: pluginName,\n            stage: Compilation.PROCESS_ASSETS_STAGE_SUMMARIZE,\n          },\n          (_assets, cb) => {\n            if (!download.template || download.status !== \"SUCCESS\") return;\n            const templateSource = _assets[download.template];\n            if (!templateSource) return;\n            const newTemplateSourceData = this.getInjectedTemplateSourceData(\n              templateSource,\n              download\n            );\n            const newTemplateSource = new compiler.webpack.sources.RawSource(\n              newTemplateSourceData\n            );\n            compilation.updateAsset(download.template, newTemplateSource);\n            cb();\n          }\n        );\n      }\n    );\n  }\n}\n\nconst DEFAULT_FILE_TYPE = \"js\";\nfunction getRandomFileName() {\n  return `download-${uuidv4()}.${DEFAULT_FILE_TYPE}`;\n}\n"],"file":"index.js"}